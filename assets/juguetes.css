.filtros {
    margin-top: 105px;
}

#filterSearch {
    width: 55px;
    background-color: #7819ac;
    color: white;
}

#filterSearch:hover {
    background-color: #ac41ee;
}

#OrdenUp,
#OrdenDown {
    background-color: #7819ac;
}

#OrdenUp:hover,
#OrdenDown:hover {
    background-color: #ac41ee;
}

#search {
    width: 30%;
    min-width: 210px;
}

.ordenar {
    color: white;
    font-size: 20px;
}

.mensaje {
    text-align: center;
    margin-top: 50px;
    margin-bottom: 50px;
    font-style: italic;
    font-weight: bolder;
    font-size: larger;
}

.container-cards {
    width: 100%;
    margin-top: 2%;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    justify-items: center;
    gap: 30px;
}

@media (min-width: 0px) {
    .container-cards {
        grid-template-columns: repeat(1, 1fr);
    }

    .button {
        margin-top: 5px !important;
        margin-bottom: 20px !important;
    }
}

@media (min-width: 768px) {
    .container-cards {
        grid-template-columns: repeat(2, 1fr);
    }

    .button {
        margin-top: 5px !important;
        margin-bottom: 15px !important;
    }
}

@media (min-width: 920px) {
    .container-cards {
        grid-template-columns: repeat(2, 1fr);
    }

    .button {
        margin-top: 5px !important;
        margin-bottom: 15px !important;
    }
}

@media (min-width: 1200px) {
    .container-cards {
        grid-template-columns: repeat(3, 1fr);
    }

    .button {
        margin-top: 5px !important;
        margin-bottom: 20px !important;
    }
}

@media (min-width: 1400px) {
    .container-cards {
        grid-template-columns: repeat(4, 1fr);
    }

    .button {
        margin-top: 5px !important;
        margin-bottom: 20px !important;
    }
}

:root {
    --transition: 0.25s;
    --spark: 1.8s;
}

.button {
    --cut: 0.1em;
    --active: 0;
    --bg:
        radial-gradient(40% 50% at center 100%,
            hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
            transparent),
        radial-gradient(80% 100% at center 120%,
            hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
            transparent),
        hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
    background: #7819ac;
    margin-top: 100px;
    font-size: 75%;
    font-weight: 500;
    border: 0;
    cursor: pointer;
    padding: 0.9em 1.3em;
    display: flex;
    align-items: center;
    gap: 0.25em;
    white-space: nowrap;
    border-radius: 100px;
    position: relative;
    transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
    scale: calc(1 + (var(--active) * 0.1));
}

.button:active {
    scale: 1;
}

.sparkle path {
    color: white;
    transform-box: fill-box;
    transform-origin: center;
    fill: currentColor;
    stroke: currentColor;
    animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
    animation-duration: 0.6s;
    transition: color var(--transition);
}

.button:is(:hover, :focus-visible) path {
    animation-name: bounce;
}

@keyframes bounce {

    35%,
    65% {
        scale: var(--scale);
    }
}

.sparkle path:nth-of-type(1) {
    --scale: 0.5;
    --delay: 0.1;
    --base: 40%;
}

.sparkle path:nth-of-type(2) {
    --scale: 1.5;
    --delay: 0.2;
    --base: 20%;
}

.sparkle path:nth-of-type(3) {
    --scale: 2.5;
    --delay: 0.35;
    --base: 30%;
}

.button:before {
    content: "";
    position: absolute;
    inset: -0.25em;
    z-index: -1;
    border: 0.25em solid hsla(260, 68%, 40%, 0.5);
    border-radius: 100px;
    opacity: var(--active, 0);
    transition: opacity var(--transition);
}

.spark {
    position: absolute;
    inset: 0;
    border-radius: 100px;
    rotate: 0deg;
    overflow: hidden;
    mask: linear-gradient(white, transparent 50%);
    animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
    to {
        rotate: 360deg;
    }
}

.spark:before {
    content: "";
    position: absolute;
    width: 200%;
    aspect-ratio: 1;
    top: 0%;
    left: 50%;
    z-index: -1;
    translate: -50% -15%;
    rotate: 0;
    transform: rotate(-90deg);
    opacity: calc((var(--active)) + 0.4);
    background: conic-gradient(from 0deg,
            transparent 0 340deg,
            white 360deg);
    transition: opacity var(--transition);
    animation: rotate var(--spark) linear infinite both;
}

.backdrop {
    position: absolute;
    inset: var(--cut);
    background: var(--bg);
    border-radius: 100px;
    transition: background var(--transition);
}

@keyframes rotate {
    to {
        transform: rotate(90deg);
    }
}

.button:is(:hover, :focus-visible) {
    --active: 1;
    --play-state: running;
}

.text {
    translate: 2% -6%;
    letter-spacing: 0.01ch;
    color: white;
    transition: background var(--transition);
}

.button svg {
    inline-size: 1.25em;
    translate: -25% -5%;
}